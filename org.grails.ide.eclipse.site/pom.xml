<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.grails.ide.eclipse</groupId>
    <artifactId>org.grails.ide.eclipse.parent</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>org.grails.ide.eclipse.site</artifactId>
  <packaging>eclipse-repository</packaging>
  <name>Grails IDE for Eclipse</name>

  <properties>
	<dist.accessKey>${accessKey}</dist.accessKey>
	<dist.secretKey>${secretKey}</dist.secretKey>
  </properties>  

	<build>
		<plugins>
		  <plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>properties-maven-plugin</artifactId>
			<version>1.0-alpha-2</version>
			<executions>
			  <execution>
				<phase>initialize</phase>
				<goals>
				  <goal>read-project-properties</goal>
				</goals>
				<configuration>
				  <quiet>true</quiet>
				  <files>
					<file>${dist.properties}</file>
					<file>${signing.properties}</file>
				  </files>
				</configuration>
			  </execution>
			</executions>
		  </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>process-update-site</id>
						<phase>install</phase>
						<configuration>
							<target>

								<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

								<path id="eclipse.classpath">
									<fileset dir="${settings.localRepository}/org/eclipse/tycho/tycho-bundles-external">
										<include name="*/eclipse/plugins/org.eclipse.equinox.launcher_*.jar" />
									</fileset>
								</path>

								<path id="jarprocessor.classpath">
									<fileset dir="${settings.localRepository}/org/eclipse/tycho/tycho-bundles-external">
										<include name="*/eclipse/plugins/org.eclipse.equinox.p2.jarprocessor_*.jar" />
									</fileset>
								</path>

								<if>
									<equals arg1="${p2.sign}" arg2="true" />
									<then>

										<delete file="${project.build.directory}/repository/content.jar" />
										<delete file="${project.build.directory}/repository/artifacts.jar" />
										
										<copy todir="${project.build.directory}/repository" file="${project.build.directory}/../pack.properties"/>

										<java jvm="${java.home}/bin/java" classname="org.eclipse.equinox.internal.p2.jarprocessor.Main"
											fork="true" classpathref="jarprocessor.classpath" failonerror="true" maxmemory="256m"
											dir="${project.build.directory}/repository">
											<arg line="-verbose -processAll -repack -pack -sign ../../sign.sh" />
											<arg line="-outputDir ${project.build.directory}/repository ${project.build.directory}/repository" />
										</java>

										<java jvm="${java.home}/bin/java" classname="org.eclipse.equinox.launcher.Main" fork="true"
											classpathref="eclipse.classpath" failonerror="true" maxmemory="256m"
											dir="${project.build.directory}/repository">
											<arg line="-application org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher" />
											<arg line="-source ${project.build.directory}/repository -metadataRepository file://${project.build.directory}/repository" />
											<arg line="-artifactRepository file://${project.build.directory}/repository -metadataRepositoryName '${p2.repository.name}'" />
											<arg line="-artifactRepositoryName '${p2.repository.name}' -compress -reusePackedFiles -reusePack200Files -publishArtifacts" />
										</java>

										<java jvm="${java.home}/bin/java" classname="org.eclipse.equinox.launcher.Main" fork="true"
											classpathref="eclipse.classpath" failonerror="true" maxmemory="256m"
											dir="${project.build.directory}/repository">
											<arg line="-application org.eclipse.equinox.p2.publisher.CategoryPublisher" />
											<arg line="-metadataRepository file://${project.build.directory}/repository" />
											<arg line="-categoryDefinition file://${basedir}/category.xml" />
											<arg line="-compress -categoryQualifier" />
										</java>

									</then>

								</if>

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>upload-dist</id>
						<phase>deploy</phase>
						<configuration>
							<target>

								<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
								<taskdef resource="org/springframework/build/aws/ant/antlib.xml" />

								<property name="site.target.dir" value="${project.build.directory}" />
								<property name="dist.full.version" value="${unqualifiedVersion}.${buildQualifier}" />

								<property name="dist.file.name" value="${dist.project}-${dist.full.version}-updatesite.zip" />
								<property name="dist.full.path" value="${site.target.dir}/site/${dist.file.name}" />

								<delete file="${dist.full.path}" />
								<zip zipfile="${dist.full.path}" filesonly="true">
									<zipfileset dir="${site.target.dir}/repository">
										<exclude name="*.zip" />
										<exclude name="**/*.gz" />
									</zipfileset>
								</zip>
								<checksum file="${dist.full.path}" algorithm="SHA1" fileext=".sha1" />
								<checksum file="${dist.full.path}" algorithm="MD5" fileext=".md5" />

								<s3 accessKey="${dist.accessKey}" secretKey="${dist.secretKey}">

									<delete bucketName="${dist.bucket}">
										<fileset dir="${dist.path}">
											<include name="site.xml" />
											<include name="content.jar" />
											<include name="artifacts.jar" />
											<include name="plugins/**" />
											<include name="features/**" />
										</fileset>
									</delete>

									<upload bucketName="${dist.bucket}" toDir="${dist.path}" publicRead="true">
										<fileset dir="${site.target.dir}/repository">
											<include name="**/*" />
											<include name="**" />
											<exclude name="*.zip" />
										</fileset>
									</upload>

									<upload bucketName="${dist.bucket}" file="${dist.full.path}" toFile="${dist.path}/${dist.file.name}"
										publicRead="true">
										<metadata name="project.name" value="${dist.name}" />
										<metadata name="release.type" value="${dist.type}" />
										<metadata name="bundle.version" value="${dist.full.version}" />
										<metadata name="package.file.name" value="${dist.file.name}" />
									</upload>
								</s3>

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.build</groupId>
						<artifactId>org.springframework.build.aws.ant</artifactId>
						<version>3.0.5.RELEASE</version>
					</dependency>
					<dependency>
						<groupId>net.java.dev.jets3t</groupId>
						<artifactId>jets3t</artifactId>
						<version>0.7.2</version>
					</dependency>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>20020829</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
